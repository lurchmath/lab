////////////////////////////////////////////////////////////////////////////
//
// Propositional Logic Lib
//

// Global Constants - we don't want any of these to be metavariables
Declare and, or, ⇒, ⇔, ¬, →←

Rules:
{ 
  
  ////////////////////////////////
  // ND Propositional Logic Axioms
  ////////////////////////////////
  :{ {W V}  ≡  W and V }                // and+
  :{ {:W V} ≡  W⇒V }                    // ⇒
  :{ { {:W V} {:V W} } ≡ W⇔V }          // ⇔
  :{ :W  (W or V) (V or W) }            // or+ 
  CasesRule:
  :{ :(W or V) :{:W U} :{:V U}  U }     // or-
  :{ :{:W →←}  ¬W }                     // ¬+
  :{ :{:¬W →←}  W }                     // ¬-
  :{ :W :¬W →← }                        // →←+

}
////////////////////////////////////////////////////////////////////////////
// Predicate Logic Lurch Lib
//

// Global Constants - we don't want any of these to be metavariables
Declare ∀, ∃, ∃!, =

////////////////////////////////
// ND Predicate Logic Axioms
////////////////////////////////
Rules:  
{  
  :{ :(∀x.𝜆P(x))  𝜆P(t) }               // ∀-
  :{ :{ :Let x  𝜆P(x) }  ∀y.𝜆P(y) }     // ∀+
  :{ :(∃x. 𝜆P(x)) 𝜆P(c) for some c }    // ∃-
  :{ :𝜆P(t) ∃x.𝜆P(x) }                  // ∃+
  :{ :x = y  :𝜆P(x) 𝜆P(y) }             // substitution
  :{ (∃!x.𝜆P(x)) ≡                      // ∃!
    (∃x.𝜆P(x) and (∀y.𝜆P(y) ⇒ y = x)) 
    }                                    
  :{ W = W }                            // reflexive =
  // theorems
  :{ :EquationsRule }            // for equations
  :{ :x = y   y = x }                   // symmetry of =
} 
    
////////////////////////////////////////////////////////////////////////////
// Peano Axioms Lurch Lib
//

// TODO: the next line is a theorem, provable from N4, and would be a speedup
// allowing us to skip the need for a ∀ statement, but currently it won't
// instantiate without a BIH.
//
// :{ :𝜆P(0) :{ :Let k be such that 𝜆P(k)   𝜆P(𝜎(k)) } 𝜆P(n) }   // alt N4

// Declare constants
Declare 0, 𝜎, +, ⋅, ≤

////////////////////////////////
// Peano Axioms
////////////////////////////////
Axioms: 
{
  :{ :𝜎(m)=𝜎(n) m=n }                                             // N2
  :{ ¬0=𝜎(n) }                                                    // N3
  :{ :𝜆P(0) :{ :Let k be such that 𝜆P(k)   𝜆P(𝜎(k)) } ∀n.𝜆P(n) }  // N4
  :{ n+0=n }                                                      // A0
  :{ m+𝜎(n)=𝜎(m+n) }                                              // A1
  :{ n⋅0=0 }                                                      // M0
  :{ n⋅𝜎(m)=m+m⋅n }                                               // M1       
  :{ m≤n ≡ ∃k.m+k=n  }                                            // I
} 
///////////////////////////////////////////////////////////////////////////
// Number Theory Lurch Lib
//

////////////////////////////////
// Number Theory Definitions
////////////////////////////////
Definitions:  
{
  Declare 1, 2, 3, 4, 5
  :{ 1=𝜎(0) }
  :{ 2=𝜎(1) }
  :{ 3=𝜎(2) }
  :{ 4=𝜎(3) }
  :{ 5=𝜎(4) }  
} 